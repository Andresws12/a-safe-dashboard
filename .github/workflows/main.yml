name: Testing
on: [push]
env:
  CYPRESS_BASE_URL: http://localhost:5173
  NODE_VERSION: '23.3.0'
  PNPM_VERSION: '10.6.3'
  PNPM_STORE: '~/.pnpm-store'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.key }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate cache key
        id: cache-keys
        run: echo "::set-output name=key::$(echo ${{ runner.os }}-node-$(sha256sum **/pnpm-lock.yaml | sha256sum | cut -d ' ' -f 1))"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ env.PNPM_STORE }}
          key: ${{ steps.cache-keys.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-node-

  cypress-run:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ env.PNPM_STORE }}
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Start database with Docker Compose
        run: docker-compose up -d
        
      - name: Wait for database to be ready
        run: |
          timeout=30
          until docker-compose exec -T database pg_isready 2>/dev/null || [ $timeout -eq 0 ]; do
            echo "Waiting for database to be ready..."
            sleep 1
            timeout=$((timeout-1))
          done
          if [ $timeout -eq 0 ]; then
            echo "Database failed to start"
            exit 1
          fi
          echo "Database is ready"

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        env:
          CYPRESS_USER_TEST_EMAIL: ${{ secrets.CYPRESS_USER_TEST_EMAIL }}
          CYPRESS_USER_TEST_PASSWORD: ${{ secrets.CYPRESS_USER_TEST_PASSWORD }}
        with:
          install: false
          project: ./
          start: pnpm dev
          wait-on: ${{ env.CYPRESS_BASE_URL }}
          wait-on-timeout: 120
          
      - name: Stop Docker Compose services
        if: always()
        run: docker-compose down

      - name: Upload e2e videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: videos
          path: cypress/videos
