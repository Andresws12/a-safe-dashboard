name: Testing
on: [push]
env:
  CYPRESS_BASE_URL: http://localhost:3000
  NODE_VERSION: '23.3.0'
  PNPM_VERSION: '10.6.3'
  PNPM_STORE: '~/.pnpm-store'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.key }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate cache key
        id: cache-keys
        run: echo "::set-output name=key::$(echo ${{ runner.os }}-node-$(sha256sum **/pnpm-lock.yaml | sha256sum | cut -d ' ' -f 1))"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ env.PNPM_STORE }}
          key: ${{ steps.cache-keys.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-node-

  cypress-run:
    needs: setup
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ env.PNPM_STORE }}
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/Cypress
          key: cypress-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Cypress binary
        run: pnpm exec cypress install

      - name: Build application
        run: pnpm build

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        env:
          CYPRESS_USER_TEST_EMAIL: ${{ secrets.CYPRESS_USER_TEST_EMAIL }}
          CYPRESS_USER_TEST_PASSWORD: ${{ secrets.CYPRESS_USER_TEST_PASSWORD }}
        with:
          install: false
          project: ./
          start: pnpm start
          wait-on: ${{ env.CYPRESS_BASE_URL }}
          wait-on-timeout: 120

      - name: Upload e2e videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: videos
          path: cypress/videos

  unit:
    name: 'Unit tests'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    env:
      NODE_ENV: test
      NEXTAUTH_SECRET: supersecret
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install deps (with cache)
        run: pnpm install

      - name: Next.js cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-nextjs

      - name: Setup Prisma
        run: pnpm prebuild

      - run: pnpm test-unit

  lint:
    name: 'Lint and Prettier'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install deps (with cache)
        run: pnpm install

      - name: Run ESLint
        run: pnpm lint

      - name: Run Prettier
        run: pnpm format:check
